/*
	개방 폐쇄 원칙(OCP) : 확장에는 열려있고, 수정에는 닫혀있어야하는 원칙

	동적 바인딩을 이용하면, 프로그램은 새로운 기능을 추가할 수 있는 방법(확장 개방)이 생기며,
	다른 코드에 파급 효과가 없어 추가되는 기능 외에는 수정이(수정 폐쇄) 필요없다.
	
	OCP는 추상 클래스를 통해 구현할 수 있다.
	프로그램에서 주요 기능의 흐름은 추상 클래스를 활용해 작성하고 이를 상속받아
	구현하는 클래스에 따라서 세부 동작이 결정된다.

	템플릿 메서드 패턴 : 흐름의 뼈대는 템플릿으로 만들고 살을 붙이는 작업은
	자식 클래스에 위임하는 설계 패턴
*/